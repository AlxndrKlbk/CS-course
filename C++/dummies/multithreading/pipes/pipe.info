Неименованные каналы

Создать неименованный канал.

int pipe(int fd[2]); // В fd[1] можно писать, из fd[0] читать. Канал односторонний.

Атомарно можно записать PIPE_BUF байт.

Для создания конвеера можно использовать вызовы pipe (создает канал) и dup2 (копирует дескриптор). Основная идея - создаем канал fd, делаем fork. У первого процесса закрываем stdout (close(1)). Делаем dup2(fd[1], 1). У второго процесса закрываем stdin (close(0)) и делаем dup2(fd[0], 0). После чего у обоих процессов можно закрыть fd[0] и fd[1] - stdout первого процесса будет связан с stdin второго через созданный нами канал.

Существуют вызовы popen и pclose - аналоги fopen и fclose, но только для запуска процессов. Работают они через неименованные каналы.
Именованные каналы.

Создать именованный канал.

int mkfifo(const char *path, mode_t perms);

Далее можем с ним работать как с файлом - открываем через open (получаем дескриптор) и делаем read или write (также, как с неименованным каналом).
Пары сокетов и передача дескрипторов.

Пара сокетов по сути выполняет роль двустороннего канала.

int socketpair(int d /* Только AF_UNIX */, int type, int protocol, int sv[2] /* Сюда вернутся дескрипторы */);

Через пару Unix-сокетов можно передать дескриптор.

Большая статья с кодом на тему передачи дескриптора: http://keithp.com/blogs/fd-passing/﻿
