Джефф Элджер. C++: Библиотека программиста. Основной учебник по продвинутому освоению языка C++.
Марк Дж. Рочкинд. Программирование для Unix. Must have!
Уильям Ричард Стивенс. Unix: Взаимодействие процессов. Учебник по межпроцессному взаимодействию.
Уильям Ричард Стивенс. Unix: Разработка сетевых приложений. Учебник по работе с сетью.

https://www.youtube.com/watch?v=DlVn9uh20Ec&list=PLrCZzMib1e9oag2Qgg76foi0x88gFs0rh


кратко о видах мьютексов:

1) std::mutex
Обычный мьютекс, со всеми вытекающими из него проблемами, следует использовать или в простых ситуациях или абстрагируясь
через std::unique_lock (владеющий поток может сам повторно lock и заблокируется, unique_lock не позволит этого сделать)/std::lock_guard(защита для вызова unlock в деструкторе)

2)std::shared_mutex (C++17)
Мьютекс предоставляющий общий доступ (через std::shared_lock) и эксклюзивный доступ (std::unique_lock)

3)std::scoped_lock
одновременно захватывают (а затем освобождают) все мьютексы, передаваемые в качестве аргумента, по принципу «всё или ничего»:
если хотя бы один захват выбрасывает исключение, освобождаются все уже захваченные мьютексы.) Своего рода защита от Dead Lock
